Success

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Word Spelling App</title>
<link rel="stylesheet" href="styles.css">
</head>
<body>
<div class="container">
    <h1>Word Spelling App</h1>
    <div class="input-container">
        <input type="text" id="wordInput" placeholder="Type the word here...">
        <button onclick="checkSpelling()">Check</button>
    </div>
    <div id="feedback"></div>
</div>

<script src="script.js"></script>
</body>
</html>


body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.container {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    text-align: center;
    max-width: 400px;
    width: 90%;
}

h1 {
    margin-top: 0;
    color: #333;
}

.input-container {
    margin-bottom: 20px;
}

input[type="text"] {
    padding: 10px;
    width: calc(100% - 80px);
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 16px;
}

button {
    padding: 10px 20px;
    border: none;
    background-color: #4CAF50;
    color: white;
    cursor: pointer;
    border-radius: 4px;
    font-size: 16px;
}

button:hover {
    background-color: #45a049;
}

#feedback {
    margin-top: 20px;
    font-size: 18px;
    font-weight: bold;
    color: #333;
}


function checkSpelling() {
    // Get the input value
    var userInput = document.getElementById("wordInput").value.trim().toLowerCase();
    
    // Define the correct word (you can change this to suit your needs)
    var correctWord = "apple";
    
    // Check if user input matches the correct word
    if (userInput === correctWord) {
        document.getElementById("feedback").innerHTML = "Correct!";
        document.getElementById("feedback").style.color = "green";
    } else {
        document.getElementById("feedback").innerHTML = "Incorrect. Try again!";
        document.getElementById("feedback").style.color = "red";
    }
}





design word spelling app using responsive html, css and javascript
ChatGPT
To 
design a more comprehensive word spelling app using responsive HTML, CSS, and JavaScript, 
we can enhance the previous example with additional features like score tracking, word 
pronunciation, and dynamic word lists. Here's an enhanced version of the spelling app:
